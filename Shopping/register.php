<!-- This code is a PHP script that handles user registration. When the user submits the registration form, the script first checks if the email and password fields match, if not it will add an error message to the $message array.

It then checks if the email is in a valid format, and checks if the password meets the requirement, which is at least 8 characters long, contains at least one letter and one number. If any of these checks fail, an error message is added to the $message array.

Next, it checks if the $message array is empty, if it is it will check if the email already exists in the database by executing a SELECT query. If the email already exists, an error message is added to the $message array.

If the email does not already exist in the database, it will execute an INSERT query to add the new user to the database. If the query is successful, the script will redirect the user to the login page and add a success message to the $message array.

If there is an error with the query, it will add an error message to the $message array.

The ob_start() function at the beginning of the script turns output buffering on, which means that any output generated by the script will be stored in a buffer rather than being sent to the browser. The ob_end_flush() function at the end of the script sends the contents of the buffer to the browser and turns off output buffering.

The script is not using session, it's using a global variable $message to store errors or success message. -->


<?php
include 'config.php';

// session_start();
ob_start();


if (isset($_POST['submit'])) {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $cemail = $_POST['cemail'];
    $pass = $_POST['password'];
    $cpass = $_POST['cpassword'];
    $user_type = $_POST['User_type'];


    if ($email != $cemail) {
        $message[] = 'Email not matched!';
    }
    if ($pass != $cpass) {
        $message[] = 'Password not matched!';
    }
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $message[] = 'Invalid email format';
    }
    if (!preg_match('/^(?=.*\d)(?=.*[A-Za-z])[0-9A-Za-z!@#$%]{8,12}$/', $pass)) {
        $message[] = 'password should be minimum 8 character at least 1 Alphabet and 1 Number:';
    }

    if (empty($message)) {
        $query = "SELECT * FROM `users` WHERE email = ?";
        $stmt = mysqli_prepare($conn, $query);
        mysqli_stmt_bind_param($stmt, "s", $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        if (mysqli_num_rows($result) > 0) {
            $message[] = 'User already exists!';
        } else {
            $query = "INSERT INTO `users`(name, email,password,user_type) VALUES (?,?,?,?)";
            $stmt = mysqli_prepare($conn, $query);
            $password_hashed = password_hash($pass, PASSWORD_BCRYPT);
            mysqli_stmt_bind_param($stmt, "ssss", $name, $cemail, $password_hashed, $user_type);
            $success = mysqli_stmt_execute($stmt);
            if ($success) {
                $message[] = 'Registered Successfully!well done!';
                header('location:login.php');
            } else {
                $message[] = 'Error: ' . mysqli_error($conn);
            }
        }
    }
}
ob_end_flush();
?>



<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>register</title>
    <!-- font awesome cdn link -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css">
    <!-- custom css file link -->
    <link rel="stylesheet" href="css/style.css">
</head>

<body>

    <!-- This code is the HTML and PHP code for the registration form that is displayed to the user.
The first line of code checks if the $message variable has been set and if it contains more than 0 elements, it will loop through the $message array and display each message in a div element with class "message". Inside the div, there is an icon with class "time" which will remove the parent element of the icon if it is clicked.

Then, it displays the registration form with several input fields for the user to enter their information such as name, email, confirm email, password, confirm password, and user type. The form's method is set to "post" and the action is set to an empty string, which means that the form will be submitted to the same page.

There is also a "submit" button that when clicked, will submit the form and trigger the PHP script that handles the registration process. There is also a message displayed that informs the user that if they already have an account, they can click the "Login" link to go to the login page. -->
    <?php
    if (isset($message) && count($message) > 0) {
        foreach ($message as $message) {
            echo '<div class="message">
            <span>' . $message . '</span>
            <i class ="time" onclick="this.parentElement.remove();"></i>
          </div>';
        }
    }
    ?>
    <div class="form-container">
        <form action="" method="post">
            <h2>Sign in :)</h2>
            <input class="txt" type="text" name="name" placeholder="Enter Your name..." required>
            <input class="txt" type="email" name="email" placeholder="Enter Your Email..." required>
            <input class="txt" type="email" name="cemail" placeholder="Confirm email..." required>
            <input class="txt" type="password" name="password" placeholder="Enter Your Password..." required>
            <input class="txt" type="password" name="cpassword" placeholder=" Confirm password..." required>
            <select class="txt" name="User_type" id="User_type">
                <option value="user">User</option>
                <option value="admin">Admin</option>
            </select>
            <input class="btn" type="submit" value="Register" name="submit">
            <p> You already have an account? --> <a href="login.php">Login </a></p>
        </form>
    </div>
</body>

</html>